/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    //Can be built by grouping RAM4K parts together
    DMux8Way(in=load , sel=address[0..2] , a=a , b=b , c=c , d=d , e=e , f=f , g=g , h=h );
    RAM4K(in=in , load=a , address=address[2..13] , out=outa );
    RAM4K(in=in , load=b , address=address[2..13] , out=outb );
    RAM4K(in=in , load=c , address=address[2..13] , out=outc );
    RAM4K(in=in , load=d , address=address[2..13] , out=outd );
    RAM4K(in=in , load=e , address=address[2..13] , out=oute );
    RAM4K(in=in , load=f , address=address[2..13] , out=outf );
    RAM4K(in=in , load=g , address=address[2..13] , out=outg );
    RAM4K(in=in , load=h , address=address[2..13] , out=outh );
    Mux8Way16(a=outa , b=outb , c=outc , d=outd , e=oute , f=outf , g=outg , h=outh , sel=address[0..2] , out=out );
}